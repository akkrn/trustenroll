services:
  backend:
    build: ./backend
    container_name: backend
    restart: unless-stopped
    env_file: .env
    depends_on:
      - db
      - redis
    networks:
      - app-network

  admin:
    build: ./backend
    container_name: admin
    command: uv run run_admin.py
    env_file: .env
    ports:
      - "1142:1142"
    depends_on:
      - db
      - redis
    networks:
      - app-network
  bot:
    build: ./bot
    container_name: bot
    restart: unless-stopped
    env_file: .env
    depends_on:
      - db
    networks:
      - app-network

  nginx:
    build: ./frontend
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./images:/var/www/images
    depends_on:
      - backend
      - admin
    networks:
      - app-network
  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    networks:
      - app-network

  db:
    image: postgres:15-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

volumes:
  postgres_data:


networks:
  app-network:
